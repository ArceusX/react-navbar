{"version":3,"sources":["pages/index.js","pages/about.js","pages/contact.js","pages/signup.js","pages/footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","style","display","justifyContent","alignItems","height","About","Contact","SignUp","Footer","marginTop","padding","backgroundColor","position","bottom","left","width","className","AllRoutes","hideMenu","location","useLocation","useEffect","path","component","App","navbarLinks","useRef","basename","process","href","onClick","e","current","classList","toggle","ref","activeClassName","exact","to","contains","add","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mQAiBeA,G,MAfF,WACX,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAGV,uCCKSC,EAfD,WACZ,OACE,yBACEL,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAGV,uCCKSE,EAfC,WACd,OACE,yBACEN,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAGV,4CCKSG,EAfA,WACb,OACE,yBACEP,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAGV,yCCMSI,EAhBA,kBACb,yBAAKR,MAAQ,CACXS,UAAW,OACXC,QAAS,OACTC,gBAAiB,oBACjBC,SAAU,QACVC,OAAQ,IACRC,KAAM,IACNC,MAAO,QAGTC,UAAU,UACR,sEC6CJ,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAEfC,EAAWC,cAKf,OAJAC,qBAAU,WACRH,MACC,CAACC,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,KAAK,UAAUC,UAAWhB,IAEjC,kBAAC,IAAD,CAAOe,KAAK,SAASC,UAAWlB,IAEhC,kBAAC,IAAD,CAAOiB,KAAK,WAAWC,UAAWjB,IAElC,kBAAC,IAAD,CAAOgB,KAAK,IAAIC,UAAWxB,KAKlByB,MAtEf,WAEE,IAAMC,EAAcC,iBAAO,MAW3B,OACE,yBAAKV,UAAU,OACb,kBAAC,IAAD,CAAYW,SAAUC,iBACpB,yBAAKZ,UAAU,UACb,yBAAKA,UAAU,oBACb,uBAAGa,KAAK,IAAIb,UAAU,eAAtB,cACA,4BAAQc,QAAS,SAACC,GAf1BN,EAAYO,QAAQC,UAAUC,OAAO,kBAeuBlB,UAAU,kBAC5D,0BAAMA,UAAU,yBAElB,yBAAKmB,IAAKV,EAAaT,UAAU,8BAC/B,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASoB,gBAAgB,YAAYC,OAAO,EAAMrB,UAAU,WAAWsB,GAAG,KAA1E,SAEF,wBAAItB,UAAU,YACZ,kBAAC,IAAD,CAASoB,gBAAgB,YAAYC,OAAO,EAAMrB,UAAU,WAAWsB,GAAG,UAA1E,UAEF,wBAAItB,UAAU,YACZ,kBAAC,IAAD,CAASoB,gBAAgB,YAAYC,OAAO,EAAMrB,UAAU,WAAWsB,GAAG,YAA1E,eAEF,wBAAItB,UAAU,YACZ,kBAAC,IAAD,CAASoB,gBAAgB,YAAYC,OAAO,EAAMrB,UAAU,WAAWsB,GAAG,WAA1E,eAMV,yBAAKtB,UAAU,aACb,kBAACC,EAAD,CAAWC,SAAU,WAjCtBO,EAAYO,QAAQC,UAAUM,SAAS,kBAC1Cd,EAAYO,QAAQC,UAAUO,IAAI,qBAkChC,kBAAC,EAAD,SCxCYC,QACW,cAA7BC,OAAOvB,SAASwB,UAEe,UAA7BD,OAAOvB,SAASwB,UAEhBD,OAAOvB,SAASwB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.939ad7a7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Contact Us</h1>\n    </div>\n  );\n};\n\nexport default Contact;","import React from 'react';\n\nconst SignUp = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Sign Up</h1>\n    </div>\n  );\n};\n\nexport default SignUp;","import React from \"react\";\n\nconst Footer = () => (\n  <div style= {{\n    marginTop: '1rem',\n    padding: '1rem',\n    backgroundColor: 'rgb(235, 195, 64)',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    width: '100%'\n  }}\n  \n  className=\"footer\">\n    <p>This is some content in sticky footer</p>\n  </div>\n);\n\nexport default Footer;","import React, { useRef, useEffect } from 'react';\nimport { HashRouter, NavLink, Switch, Route, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages';\nimport About from './pages/about';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\nimport Footer from './pages/footer';\n\nfunction App() {\n\n  const navbarLinks = useRef(null);\n  const handleNavbarButton = (e) => {\n    navbarLinks.current.classList.toggle('menu-collapse');\n  };\n\n  const hideNavMenu = () => {\n    if (!navbarLinks.current.classList.contains('menu-collapse')) {\n      navbarLinks.current.classList.add('menu-collapse');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <nav className='navbar'>\n          <div className='navbar-container'>\n            <a href=\"#\" className='brand-title'>Brand Name</a>\n            <button onClick={(e) => { handleNavbarButton(e); }} className='navbar-toggler'>\n              <span className='navbar-toggler-icon'></span>\n            </button>\n            <div ref={navbarLinks} className='navbar-links menu-collapse'>\n              <ul className='links-list'>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/'>Home</NavLink>\n                </li>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/about'>About</NavLink>\n                </li>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/contact'>Contact Us</NavLink>\n                </li>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/signup'>Signup</NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <div className='container'>\n          <AllRoutes hideMenu={() => { hideNavMenu(); }}></AllRoutes>\n        </div>\n        <Footer />\n\n      </HashRouter>\n    </div>\n  );\n}\n\nfunction AllRoutes({ hideMenu }) {\n\n  let location = useLocation();\n  useEffect(() => {\n    hideMenu();\n  }, [location]);\n\n  return (\n    <Switch>\n      <Route path=\"/signup\" component={SignUp}>\n      </Route>\n      <Route path=\"/about\" component={About}>\n      </Route>\n      <Route path=\"/contact\" component={Contact}>\n      </Route>\n      <Route path=\"/\" component={Home}>\n      </Route>\n    </Switch>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}